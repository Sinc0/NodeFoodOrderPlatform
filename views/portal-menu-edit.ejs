<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/icon.png" type="image/x-icon">
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCHDajHZ7clx29MBJQ2omXfEprzsRw5n6Y&callback=GoogleMapsAdressAutocomplete" async defer></script>
    <title>Edit Menu</title>
</head>

<script>
    function collapseMenuEditCategory(id)
    {
        let categoryDiv = document.getElementById(id)
    }
    
    function deleteItem(item, category, itemNumber)
    {              
        //elements  
        let itemsElementCounter = document.getElementsByClassName("item")
        let itemCounterParagraph = document.getElementById("itemCounterParagraph")

        //variables
        let getLocalStorage = localStorage.getItem("items")
        let a = []
        let i = JSON.parse(getLocalStorage)
        let itemToLookFor = String(category).toLowerCase() + itemNumber
        
        //push local storage items to array
        for(let c = 0; c < i.length; c++)
        {
            a.push(i[c])
        }

        //look for item
        if(getLocalStorage.includes(itemToLookFor))
        {
            for(let c = 0; c < i.length; c++)
            {            
                    
                if(a[c].id.includes(itemToLookFor))
                {
                    a.splice(c, 1) //remove item from localstorage    
                    localStorage.setItem("items", JSON.stringify(a))
                    break
                }
            }
        }                
        
        //remove div
        document.getElementById(item).remove()
        
        //recount categories
        countCategories(category)
        
        //update items count
        // itemCounterParagraph.innerHTML = "Items " + "(" + (itemsElementCounter.length) + ")";

        //update items input form
        setFormWithCorrectData()

    }

    function addItem(itemCategory)
    {
        //elements 
        let itemsInCategoryCount = countCategories(itemCategory)
        let itemName = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1)

        //expand category if collapsed
        let expand = document.getElementById("category" + itemCategory + "Body")
        expand.style.display = "block"
    
        //create item div
        let div = document.createElement("div")
        div.id = itemName;
        div.className = "item " + String(itemCategory).toLowerCase()

        //update items and category count
        let itemsElementCounter = document.getElementsByClassName("item")
        let categoryElementCounter = document.getElementsByClassName(String(itemCategory).toLowerCase())
        let categoryCounterParagraph = document.getElementById("categoryCounterParagraph" + itemCategory)
        categoryCounterParagraph.innerHTML = "<b>" + itemCategory.toLowerCase() + " (" + (categoryElementCounter.length + 1) + ")</b>"
        // let itemCounterParagraph = document.getElementById("itemCounterParagraph")
        // itemCounterParagraph.innerHTML = "Items " + "(" + (itemsElementCounter.length + 1) + ")"

        //create elements
        let inputPosition = document.createElement("input")
        let inputId = document.createElement("input")
        let inputCategory = document.createElement("input")
        let inputTitle = document.createElement("input")
        let inputPrice = document.createElement("input")
        let inputDescription = document.createElement("input")
        let buttonRemove = document.createElement("div")
        
        //position
        inputPosition.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-position"
        inputPosition.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-position"
        inputPosition.placeholder = "position"
        inputPosition.value = (itemsInCategoryCount + 1)
        inputPosition.className = "itemInput"
        inputPosition.onkeyup = function() {setItemLocalStorage("item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1))}
        inputPosition.style.display = "none"
        
        //set id input
        inputId.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-id"
        inputId.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-id"
        inputId.placeholder = "id"
        inputId.value = String(itemCategory).toLowerCase() + (itemsInCategoryCount + 1)
        inputId.className = "itemInput"

        //set category input
        inputCategory.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-category"
        inputCategory.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-category"
        inputCategory.placeholder = "category"
        inputCategory.value = String(itemCategory).toLowerCase()
        inputCategory.className = "itemInput"

        //set title input
        inputTitle.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-title"
        inputTitle.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-title"
        inputTitle.placeholder = "title"
        inputTitle.value = String(itemCategory).toLowerCase() + " item " + (itemsInCategoryCount + 1)
        inputTitle.className = "itemInput"
        inputTitle.onkeyup = function() {setItemLocalStorage("item-" + itemCategory + "#" + (itemsInCategoryCount + 1))}
        
        //set price input
        inputPrice.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-price"
        inputPrice.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-price"
        inputPrice.placeholder = "price"
        inputPrice.value = 10
        inputPrice.className = "itemInput"
        inputPrice.onkeyup = function() {setItemLocalStorage("item-" +  itemCategory + "#" + (itemsInCategoryCount + 1))}
        
        //set description input
        inputDescription.id = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-input-description"    
        inputDescription.name = "item-" + String(itemCategory).toLowerCase() + "#" + (itemsInCategoryCount + 1) + "-description"   
        inputDescription.placeholder = "description"
        inputDescription.className = "itemInput"
        inputDescription.onkeyup = function() {setItemLocalStorage("item-" + itemCategory + "#" + (itemsInCategoryCount + 1))}
        
        //set values
        let sliceThis = itemCategory.toString()
        let slicedCategory = sliceThis.slice(0, (sliceThis.length - 1))

        if(sliceThis[(sliceThis.length - 1)] == "s")
        {
            inputDescription.value = "description of " + slicedCategory.toLowerCase() + " " + (itemsInCategoryCount + 1)
        }
        else
        {
            inputDescription.value = "description of " + itemCategory.toLowerCase() + " " + (itemsInCategoryCount + 1)
        }
                
        //disabled
        inputId.disabled = true
        inputCategory.disabled = true

        //hidden
        inputId.style.display = "none"
        inputCategory.style.display = "none"
                        
        //remove item on click text
        buttonRemove.innerHTML = "-"
        buttonRemove.onclick = function() {deleteItem(itemName, itemCategory, (itemsInCategoryCount + 1))}
        buttonRemove.className = "itemInput buttonRemoveItem"

        //appends
        document.getElementById("category" + itemCategory + "Body").appendChild(div)
        div.appendChild(inputPosition)
        div.appendChild(inputId)
        div.appendChild(inputCategory)
        div.appendChild(inputTitle)
        div.appendChild(inputPrice)
        div.appendChild(inputDescription)
        div.appendChild(buttonRemove)

        //set item to local storage
        setItemLocalStorage("item-" + itemCategory.toLowerCase() + "#" + (itemsInCategoryCount + 1))

        //update items input form
        setFormWithCorrectData()
    }

    function addCategory()
    {
        //elements
        let promptAnswer = prompt("type desired name for category")

        //validation
        if(promptAnswer == null || promptAnswer == "" || promptAnswer == " " || promptAnswer.includes(" "))
        {
            //do nothing
        }
        else
        {
            let categories = document.getElementById("menuEditRestaurantCategory")
            let menuItemsDiv = document.getElementById("menuEditRestaurantItems")
            let formTest = document.getElementById("formMenuItems")
            let getTotalNumberOfCategories = countCategoriesInCategories()
            let promptAnswerUnformatted = promptAnswer.toLowerCase()
            
            //make sure white spaced is handled
            let promptAnswerWhiteSpaceHandled = ""
            let t = promptAnswer.split(" ")

            for(let c = 0; c < t.length; c++)
            {
                if(c != t.length - 1)
                {
                    promptAnswerWhiteSpaceHandled += (t[c].toString()) + "-"
                }
                else
                {
                    promptAnswerWhiteSpaceHandled += (t[c].toString())
                }
            }

            //further handling of white space
            t = t.toString().replace(/,/g, "")
            promptAnswer = promptAnswerWhiteSpaceHandled
            let promptAnswerFormatted = promptAnswer.toLowerCase()

            //create div
            let div = document.createElement("div")
            div.id="category#" + (getTotalNumberOfCategories + 1)

            //create input
            let input = document.createElement("input")
            input.id = "categoryInput#" + (getTotalNumberOfCategories + 1)
            input.className = "categoryInput"
            input.value = promptAnswerUnformatted.toLowerCase()
            input.onkeyup = function() { setCategoryToLocalStorage(input.value); renameCategoryEverywhere((getTotalNumberOfCategories + 1))}
            input.disabled = true

            //create bold
            let bold1 = document.createElement("b")
            bold1.innerHTML = (getTotalNumberOfCategories + 1)
            // bold1.style = "margin-left: 4px;"
            
            let bold3 = document.createElement("b");
            bold3.id = "categoryInput#" + (getTotalNumberOfCategories + 1) + "-position"
            bold3.name = promptAnswer
            bold3.value = (getTotalNumberOfCategories + 1)
            bold3.className = "categoryArrows categoryUp categoryArrowsUp"
            bold3.innerHTML = "▲"
            bold3.onclick = function() {changePositionCategories(this.value, (this.value - 1), this.name)}
            // bold3.style = "margin-left: 4px;"

            let bold4 = document.createElement("b")
            bold4.id = "categoryInput#" + (getTotalNumberOfCategories + 1) + "-position"
            bold4.name = promptAnswer
            bold4.value = (getTotalNumberOfCategories + 1)
            bold4.className = "categoryArrows categoryDown categoryArrowsDown"
            bold4.innerHTML = "▼"
            bold4.onclick = function() {changePositionCategories(this.value, (this.value - 1), this.name)}
            // bold4.style = "margin-left: 4px;"

            //create category div
            let categoryDiv = document.createElement("div")
            let split = promptAnswer.split(" ")
            
            for(let c = 0; c < split.length; c++)
            {
                split[c] = split[c]
            }

            let formattedString = split.toString().replace(/,/g, '')

            categoryDiv.id = "category" + formattedString
            categoryDiv.className = "menu-edit-category"
            categoryDiv.style.display = "block"
            categoryDiv.style.margin = "auto"
            // categoryDiv.style.border = "2px solid black"

            //categoryHeader
            let categoryHeaderBold = document.createElement("b");  
            let categoryHeaderLabel1 = document.createElement("label")
            let categoryHeaderLabel2 = document.createElement("label")
            let categoryHeaderLabel3 = document.createElement("label")
            let categoryHeaderLabel4 = document.createElement("label")
            categoryHeaderBold.innerHTML = (getTotalNumberOfCategories + 1) + " "
            categoryHeaderLabel3.innerHTML = promptAnswer.toString().toLowerCase()
            categoryHeaderLabel3.id = "categoryCounterParagraph" + promptAnswerFormatted
            categoryHeaderLabel3.className = "menuCategoryName"
            categoryHeaderLabel4.innerHTML = " + "
            categoryHeaderLabel4.onclick = function() {addItem(promptAnswerFormatted)}
            categoryHeaderLabel4.style = "margin: 0px 16px 0px 21px;"
            // categoryHeaderLabel1.innerHTML = "[Collapse] "

            //categoryHeaderInput
            let categoryHeaderInput1 = document.createElement("input")
            categoryHeaderInput1.id = "categoryInput#" + (getTotalNumberOfCategories + 1) + "-disabled"
            categoryHeaderInput1.disabled = true
            categoryHeaderInput1.hidden = true

            //categoryHeaderDiv
            let categoryHeaderDiv = document.createElement("div")
            categoryHeaderDiv.id = "category" + promptAnswerFormatted + "Header"
            categoryHeaderDiv.className = "menu-edit-category"
            // categoryHeaderDiv.style = "margin: auto; padding-top: 5px; padding-bottom: 5px; background-color: royalblue;"

            //categoryBody
            let categoryBodyDiv = document.createElement("div")
            categoryBodyDiv.id = "category" + promptAnswerFormatted + "Body"
            categoryBodyDiv.className = "item"
            categoryBodyDiv.style.display = "block"
            categoryBodyDiv.style.margin = "auto"

            //label
            let label = document.createElement("label")
            label.innerHTML = " X "
            label.style = "margin-left: 0px;"
            label.onclick = function() {deleteCategory((getTotalNumberOfCategories + 1), formattedString)}
                
            //appends
            categoryHeaderDiv.appendChild(categoryHeaderLabel1)
            categoryHeaderDiv.appendChild(categoryHeaderInput1)
            categoryHeaderDiv.appendChild(categoryHeaderLabel4)
            categoryHeaderDiv.appendChild(categoryHeaderLabel3)
            div.appendChild(label)
            div.appendChild(input)
            div.appendChild(bold1)
            div.appendChild(bold3)
            div.appendChild(bold4)
            categories.appendChild(div)
            categoryDiv.appendChild(categoryHeaderDiv)
            categoryDiv.appendChild(categoryBodyDiv)
            formTest.append(categoryDiv)

            //bug fix
            document.getElementById(categoryHeaderInput1.id).value = promptAnswerUnformatted.toLowerCase()
            
            //set local storage
            setCategoryToLocalStorage(promptAnswer.toLowerCase())

            //update form
            setFormWithCorrectData()

            //refresh categories list to load all arrows
            changePositionCategories(null, null, null)
        }
    }

    function countCategories(c)
    {
        //elements 
        let category = document.getElementById("categoryCounterParagraph" + c)
        let count = document.getElementsByClassName(c).length

        //null check
        if(count != null && count != 0)
        {
            category.innerHTML = "<b>" + c + " (" + count + ")" + "</b>"
            return count
        }
        else
        {
            category.innerHTML = "<b>" + c + " (" + 0 + ")" + "</b>"
            return 0
        }

    }

    function countCategoriesForSpecificItem(position, id, category)
    {
        //elements
        let inputPosition = document.getElementById(position)
        let inputId = document.getElementById(id)
        let count = document.getElementsByClassName(String(category).toLowerCase()).length
        
        //update elements
        inputPosition.value = count
        inputPosition.name = "item-" + category + "#" + count + "-position"
        inputId.value = category + count
    }

    function countCategoriesInCategories()
    {
        //elements
        let count = document.getElementsByClassName("categoryInput")

        return count.length
    }

    function collapseDiv(id)
    {
        //elements
        let div = document.getElementById(id)
        
        //update elements
        if(div.style.display == "block")
        {
            div.style.display = "none"
        }
        else if(div.style.display = "none")
        {
            div.style.display = "block"
            div.style.margin = "auto"
        }
    }

    function deleteCategory(number, id)
    {
        //variables
        id = String(id)
        let formattedString = "category" + id
        
        //ask user
        let p = prompt("This will delete the category " + id + " and all it's items, type delete " + String(id) + " if you wanna proceed")
        
        if(p == "delete " + String(id))
        {
            document.getElementById("category#" + number).remove()
            document.getElementById(formattedString).remove()

            //remove category from local storage
            let getLocalStorageCategories = localStorage.getItem("categories")
            let a = []
            let i = JSON.parse(getLocalStorageCategories)
            let itemToLookFor = id.toLowerCase()
            
            for(let c = 0; c < i.length; c++)
            {
                a.push(i[c])
            }

            if(getLocalStorageCategories.includes(itemToLookFor))
            {
                //check what item
                for(let c = 0; c < i.length; c++)
                {            
                    //remove item from localstorage        
                    if(a[c].categoryName.includes(itemToLookFor))
                    {
                        a.splice(c, 1)
                        localStorage.setItem("categories", JSON.stringify(a))
                        break
                    }
                }
            }

            //remove items with the category
            let getLocalStorageItems = localStorage.getItem("items")

            a = []
            b = []
            i = JSON.parse(getLocalStorageItems)
            itemToLookFor = id.toLowerCase()
            
            for(let c = 0; c < i.length; c++)
            {
                a.push(i[c])
            }

            if(getLocalStorageItems.includes(itemToLookFor))
            {
                //check what item                   
                for(let counter = 0; counter <= a.length - 1; counter++)
                {            
                    //remove item from localstorage
                    if(a[counter].category == itemToLookFor)
                    {
                        //do nothing
                    }
                    else
                    {
                        b.push(a[counter])
                    }
                }
            }  
        
            localStorage.setItem("items", JSON.stringify(b))
        }
        else
        {
            return
        }
        
        //update form
        setFormWithCorrectData()

        //submit form
        let form = document.getElementById("formMenuEditData")
        form.submit()
        // function handleForm(event) { event.preventDefault() }
        // form.addEventListener('submit', handleForm) 
    }

    function clearLocalStorage()
    {
        //reset local storage
        localStorage.setItem("categories", null)
        localStorage.setItem("items", null)
    }

    function clearLocalStorageCategories()
    {
        //reset local storage
        localStorage.setItem("categories", null)
    }

    function clearLocalStorageItems()
    {
        //reset local storage
        localStorage.setItem("items", null)
    }

    function setImgToLocalStorage()
    {
        //elements
        let inputImg = document.getElementById("inputImg")

        //set local storage
        localStorage.setItem("img", JSON.stringify(inputImg.value))

        //update form
        setFormWithCorrectData()
    }

    function setPhoneToLocalStorage()
    {
        //elements
        let inputPhone = document.getElementById("inputPhone")

        //set local storage
        localStorage.setItem("phone", JSON.stringify(inputPhone.value))

        //update form
        setFormWithCorrectData()
    }

    function setAddressToLocalStorage()
    {
        //elements
        let inputAddress = document.getElementById("inputAddress")

        //set local storage
        localStorage.setItem("address", JSON.stringify(inputAddress.value))

        //update form
        setFormWithCorrectData()
    }

    function setDescriptionToLocalStorage()
    {
        //elements
        let inputDescription = document.getElementById("inputDescription")

        //set local storage
        localStorage.setItem("description", JSON.stringify(inputDescription.value))

        //update form
        setFormWithCorrectData()
    }

    function setHoursToLocalStorage()
    {
        //elements
        let monday = document.getElementById("inputHoursMonday")
        let tuesday = document.getElementById("inputHoursTuesday")
        let wednesday = document.getElementById("inputHoursWednesday")
        let thursday = document.getElementById("inputHoursThursday")
        let friday = document.getElementById("inputHoursFriday")
        let saturday = document.getElementById("inputHoursSaturday")
        let sunday = document.getElementById("inputHoursSunday")

        //variables
        let arrayHours = []

        //set hours array
        arrayHours.push({day: "Monday", time: monday.value})
        arrayHours.push({day: "Tuesday", time: tuesday.value})
        arrayHours.push({day: "Wednesday", time: wednesday.value})
        arrayHours.push({day: "Thursday", time: thursday.value})
        arrayHours.push({day: "Friday", time: friday.value})
        arrayHours.push({day: "Saturday", time: saturday.value})
        arrayHours.push({day: "Sunday", time: sunday.value})

        //set local storage
        localStorage.setItem("hours", JSON.stringify(arrayHours))
        
        //update form
        setFormWithCorrectData()
    }

    function setTypesToLocalStorage()
    {
        //elements
        let inputType = document.getElementById("inputType")

        //set local storage
        localStorage.setItem("types", JSON.stringify(inputType.value))
        
        //update form
        setFormWithCorrectData()
    }

    function setCityToLocalStorage()
    {
        //elements
        let inputCity = document.getElementById("inputCity")

        //set local storage
        localStorage.setItem("city", JSON.stringify(inputCity.value))
        
        //update form
        setFormWithCorrectData()
    }

    function setCategoryToLocalStorage(category)
    {
        //elements
        let getLocalStorage = localStorage.getItem("categories")

        //variables
        let a = []
        
        //update local storage
        if(getLocalStorage != "null")
        {
            let i = JSON.parse(getLocalStorage)

            for(var c = 0; c < i.length; c++)
            {
                a.push(i[c])
            }

            a.push({position: (c + 1), categoryName: category})

            localStorage.setItem("categories", JSON.stringify(a))
        }
        else if(getLocalStorage == "null")
        {
            a.push({position: 1, categoryName: category})
            localStorage.setItem("categories", JSON.stringify(a))
        }
    }

    function setItemLocalStorage(id)
    {
        //set id
        id = id.toLowerCase()

        //elements
        let positionInputValue = document.getElementById(id + "-input-position").value
        let idInputValue = document.getElementById(id + "-input-id").value
        let categoryInputValue = document.getElementById(id + "-input-category").value
        let titleInputValue = document.getElementById(id + "-input-title").value
        let priceInputValue = document.getElementById(id + "-input-price").value
        let descriptionInputValue = document.getElementById(id + "-input-description").value
        
        //variables
        let getLocalStorage = localStorage.getItem("items")
        let object = {
            position: positionInputValue,
            id: idInputValue,
            category: categoryInputValue,
            title: titleInputValue,
            price: priceInputValue,
            description: descriptionInputValue
        }
        let a = []
        
        //fill array
        if(getLocalStorage != "null")
        {
            let i = JSON.parse(getLocalStorage)
            
            for(let c = 0; c < i.length; c++)
            {
                a.push(i[c])
            }

            if(getLocalStorage.includes(idInputValue))
            {
                //check what item
                for(let c = 0; c < i.length; c++)
                {                    
                    if(a[c].id.includes(idInputValue))
                    {
                        console.log("item " + c + " contains id")
                        a[c] = object
                    }
                }
            }
            else
            {
                a.push(object)
            }
            
            localStorage.setItem("items", JSON.stringify(a))
        }
        else if(getLocalStorage == "null")
        {
            a.push(object)
            localStorage.setItem("items", JSON.stringify(a))
        }

        //update form
        setFormWithCorrectData()
    }

    function renameCategoryEverywhere(categoryIdNumber)
    {              
        //elements  
        let d = document.getElementById("categoryInput#" + categoryIdNumber)
        let k = document.getElementsByClassName(d.value)
        let getTotalNumberOfCategories = countCategoriesInCategories()
        let c = document.getElementById("categoryInput#" + categoryIdNumber)
        let i = document.getElementById("categoryInput#" + categoryIdNumber + "-disabled")
        
        //set value
        i.value = c.value
    }

    function setFormWithCorrectData()
    {
        //variables
        let img = localStorage.getItem("img")
        let phone = localStorage.getItem("phone")
        let address = localStorage.getItem("address")
        let description = localStorage.getItem("description")
        let hours = localStorage.getItem("hours")
        let types = localStorage.getItem("types")
        let categories = localStorage.getItem("categories")
        let items = localStorage.getItem("items")
        let city = localStorage.getItem("city")

        //elements
        let inputFormImg = document.getElementById("inputAllImg")
        let inputFormPhone = document.getElementById("inputAllPhone")
        let inputFormAddress = document.getElementById("inputAllAddress")
        let inputFormDescription = document.getElementById("inputAllDescription")
        let inputFormHours = document.getElementById("inputAllHours")
        let inputFormTypes = document.getElementById("inputAllTypes")
        let inputFormCategories = document.getElementById("inputAllCategories")
        let inputFormItems = document.getElementById("inputAllItems")
        let inputFormCity = document.getElementById("inputAllCity")

        //null check
        if(inputFormImg != null) { document.getElementById("inputAllImg").value = img }
        if(inputFormPhone != null) { document.getElementById("inputAllPhone").value = phone }
        if(inputFormAddress != null) { document.getElementById("inputAllAddress").value = address }
        if(inputFormDescription != null) { document.getElementById("inputAllDescription").value = description }
        if(inputFormHours != null) { document.getElementById("inputAllHours").value = hours }
        if(inputFormTypes != null) { document.getElementById("inputAllTypes").value = types }
        if(inputFormCategories != null) { document.getElementById("inputAllCategories").value = categories }
        if(inputFormItems != null) { document.getElementById("inputAllItems").value = items }
        if(inputFormCity != null) { document.getElementById("inputAllCity").value = city }
    }

    function changePositionCategories(startPos, newPos, cName)
    {
        //reset local storage
        clearLocalStorageCategories()

        //set new category position
        newPos = parseInt(newPos)

        //elements
        let categories = document.getElementsByClassName("categoryInput")
        let categoriesDiv = document.getElementById("menuEditRestaurantCategory")
        let itemsDiv = document.getElementById("menuEditRestaurantItems")
        
        //variables
        let categoriesLength = categories.length
        let categoriesArray = []

        //set categories array
        for(let c = 1; c <= categoriesLength; c++)
        {
            let position = document.getElementById("categoryInput#" + (c) + "-position")
            categoriesArray[c] = {categoryName: (categories[c - 1].value), position: (c)}
        }

        //set categories array
        for(let i = 1; i <= categoriesLength; i++)
        {
            if(categoriesArray[i].categoryName == cName)
            {
                categoriesArray[i] = categoriesArray[newPos]
                categoriesArray[i].position = (i)
                categoriesArray[newPos] = {categoryName: cName, position: newPos}
            }
        }
    
        //update elements
        for(let s = 1; s <= categoriesLength; s++)
        {
            let category = document.getElementById("category#" + s)
            category.remove()
        }
        
        //update elements
        for(let p = 1; p <= categoriesLength; p++)
        {
            let categoryName = categoriesArray[p].categoryName
            let categoryPosition = categoriesArray[p].position
            let div = null
            let label = null
            let input1 = null
            let input2 = null
            let bold1 = null
            let bold2 = null
            let bold3 = null
            let category = null
            let menuEditRestaurantItems = null

            //set div
            div = document.createElement("div")   
            div.id = "category#" + p
            div.className = "menuCategoryHolder"
            // div.style.backgroundColor = "royalblue"
            // div.style.paddingTop = "10px"
            // div.style.paddingBottom = "10px"
            // div.style.border = "1px solid black"
            
            //set label
            label = document.createElement("label")
            label.id = "categoryInput#" + p + "-delete"
            label.className = "menuCategoryRemoveButton"
            label.innerHTML = "-"
            // label.style.marginLeft = "7px"

            //set input1
            input1 = document.createElement("input")
            input1.id = "categoryInput#" + p
            input1.className = "categoryInput"
            input1.value = categoryName
            input1.disabled = true

            //set input2
            input2 = document.createElement("input")
            input2.id = "categoryInput#" + p + "-position"
            input2.type = "number"
            input2.value = ""
            input2.min = 1
            input2.max = categoriesLength
            // input2.style = "margin-left: 4px; width: 15px;"
            
            //set bold1
            bold1 = document.createElement("b")
            bold1.className = "categoryNumber"
            bold1.innerHTML = p.toString() + "."

            //set bold2
            bold2 = document.createElement("b")
            bold2.id = "categoryInput#" + p + "-position"
            bold2.name = categoryName
            bold2.value = p
            bold2.innerHTML = "▼"
            bold2.onclick = function() {changePositionCategories(this.value, (this.value + 1), this.name)}
            bold2.className = "categoryArrows categoryArrowDown"
            // bold2.style = "width: 50px; margin-left: 4px;"

            //set bold3
            bold3 = document.createElement("b")
            bold3.id = "categoryInput#" + p + "-position"
            bold3.name = categoryName
            bold3.value = p
            bold3.className = "categoryArrows categoryArrowUp"
            bold3.innerHTML = "▲"
            bold3.onclick = function() {changePositionCategories(this.value, (this.value - 1), this.name)}
            // bold3.style = ""
            
            //apppend elements
            div.appendChild(bold1)
            div.appendChild(input1)
            div.appendChild(bold2)
            div.appendChild(bold3)
            div.appendChild(label)
            categoriesDiv.appendChild(div)

            //set category
            category = document.getElementById("categoryInput#" + p + "-position")
            category.value = p
            category.name = categoryName
            category.onchange = function() {changePositionCategories(newPos, this.value, this.name)}                  
            category = document.getElementById("categoryInput#" + p + "-delete")
            category.value = p                 
            category.name = categoryName
            category.onclick = function() {deleteCategory(this.value, this.name)}
            category = document.getElementById("category" + categoryName)
            if(category != null) { category.remove() }

            //append elements
            menuEditRestaurantItems = document.getElementById("menuEditRestaurantItems")
            menuEditRestaurantItems.appendChild(category)

            //set local storage
            setCategoryToLocalStorage(categoryName)
        }

        //update form
        setFormWithCorrectData()                
    }

    function editMenuSubmitChanges()
    {
        if (confirm("Press OK to confirm changes")) 
        {
            txt = "You pressed OK!"
            document.getElementById("formMenuEditData").submit()
        } 
        else 
        {
            txt = "You pressed Cancel!"
        }
    }

    function saveScrollPosition()
    {
        //variables
        let y = window.scrollY

        //set local storage
        localStorage.setItem("scrollPositionY", y)
    }

    function loadSavedScrollPosition()
    {
        //variables
        let positionY = localStorage.getItem("scrollPositionY")

        //update scroll position
        window.scrollTo(0, positionY)
    }

    function GoogleMapsAdressAutocomplete() 
    {
        // let map = new google.maps.Map(document.getElementById('map'), {
            //center: {lat: -33.8688, lng: 151.2195},
            //zoom: 13
        // })
        
        let input = document.getElementById('inputAddress')
        let autocomplete = new google.maps.places.Autocomplete(input)
        let infowindow = new google.maps.InfoWindow()

        autocomplete.addListener('place_changed', function() 
        {
            infowindow.close()
            let place = autocomplete.getPlace()
            setAddressToLocalStorage()

            // if (!place.geometry) 
            // {
            //     return window.alert("Address not found")
            // }
        
            // var address = ''
            
            // if (place.address_components) 
            // {
            //     address = [
            //         (place.address_components[0] && place.address_components[0].short_name || ''),
            //         (place.address_components[1] && place.address_components[1].short_name || ''),
            //         (place.address_components[2] && place.address_components[2].short_name || '')
            //     ].join(' ')
            // }
        
            // infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address)
                
            //location details
            // for (let i = 0; i < place.address_components.length; i++) 
            // {
            //     if(place.address_components[i].types[0] == 'country')
            //     {
            //         let userAddress = document.getElementById('userAddress')
            //         let customerAdress = document.getElementById('customerAddress')

            //         if(userAddress != null)
            //         {
            //             userAddress.value = place.formatted_address
            //         }
            //         if(customerAdress != null)
            //         {
            //             customerAdress.value = place.formatted_address
            //         }
            //     }
            // }          
        })
    }

    //reset local storage
    clearLocalStorage()
</script>

<style>
    /*** scrollbar ***/
    ::-webkit-scrollbar { height: 0px; width: 7px; }

    /*** elements ***/
    body { background-color: #3c41d6; margin: 0px; padding: 0px; }
    input 
    { 
        padding: 10px 4px 10px 8px; 
        outline: none; 
        font-weight: bold;
        font-size: 20px; 
        text-align: left;
        font-family: Arial, Helvetica, sans-serif;
        color: white; 
        border: 0px solid black; 
        border-bottom: 1px solid black; 
        background-color: black; 
    }
    input[type=number]::-webkit-inner-spin-button { opacity: 1 }
    input { width: 392px; }
    label { overflow-x: scroll; white-space: nowrap; max-width: 80%; font-family: Arial, Helvetica, sans-serif; }
    p { font-family: Arial, Helvetica, sans-serif; }
    b { font-family: Arial, Helvetica, sans-serif; }
    a { text-decoration: none; color: black; }

    /*** classes ***/
    .buttonRemoveItem { width: 408px; }
    .menuEditCategory { width: 400px; margin: auto; padding: 0px; text-align: center; border: 0px solid black; }
    .categoryTitle 
    { 
        display: block; 
        width: 400px; 
        margin: auto; 
        margin-top: 30px; 
        padding: 0px; 
        text-align: left;
        font-weight: normal;
        font-size: 20px;
        text-shadow: 1px 1px black; 
        color: white;
    }
    .menuCategory { margin: 0px; border-bottom: 0px solid white; background-color: black; }
    .menuCategoryRemoveButton 
    { 
        width: auto;
        padding: 0px 26px 0px 18px;
        font-size: 30px;
        font-weight: bold;
        text-align: center;
        color: white;
        border: 0px solid black;
        background-color: black; 
    }
    .categoryInput { width: 60%; text-align: left; }
    .categoryArrows { font-size: 30px; color: white; border: 0px solid white; background-color: black; }
    .menuCategoryHolder 
    { 
        display: flex; 
        padding: 4px 0px 2px 0px; 
        user-select: none; 
        border-top: 1px solid white; 
        background-color: black; 
    }
    .categoryArrowDown { margin: 0px; padding: 0px; margin-top: 1px; }
    .categoryArrowUp { margin: 0px; padding: 0px; }
    .menu-edit-category 
    { 
        padding: 0px; 
        font-size: 20px; 
        user-select: none; 
        text-align: left;
        font-weight: bold;
        color: white; 
        border-bottom: 1px solid white; 
        background-color: black; 
    }
    .itemInput { width: 393px; padding: 7px 0px 7px 7px; font-weight: normal; text-align: left; border: 0px solid black; }
    .buttonRemoveItem { width: auto; text-align: center; background-color: red; }
    .menuCategoryName { display: inline-flex; margin: 12px 0px 12px 0px; }
    .categoryNumber { padding: 13px 0px 0px 16px; color: white; }
    .inputHours { border-bottom: 1px solid white; }
    .addCategoryItemBtn { margin: 0px 16px 0px 21px; }

    /*** ids ***/
    #NavBar
    {
        margin: 0px;
        padding: 0px;
        color: black;
        background-color: white;
        padding-top: 10px;
        padding-bottom: 10px;
    }
    #menu { width: 94vw; }
    #NavBar { padding-left: 7px; text-align: left; color: white; text-shadow: 1px 1px black; background-color: #3c41d6; }
    #editMenu { height: 86vh; margin: auto; margin: 0px; overflow-y: scroll; }
    #menuEditRestaurantHours { width: 400px; margin-bottom: 20px; text-align: left; }
    #menuEditCategories { width: 400px; margin: auto; }
    #menuEditRestaurantItems { width: 400px; margin: auto; }
    #NavBarEdit 
    { 
        width: 400px; 
        margin: auto;
        margin-top: 40px;
        padding: 12px 0px 12px 0px; 
        text-align: center; 
        font-weight: bold;
        font-size: 17px;
        font-family: Arial, Helvetica, sans-serif;
        background-color: lightgreen; 
    }
    #categoryTitleCuisine { margin-top: 10px; }
    #menu-edit-button-addCategory 
    { 
        display: block; 
        width: 100%; 
        padding: 10px 0px 10px 0px; 
        font-weight: bold; 
        font-size: 17px; 
        font-family: Arial, Helvetica, sans-serif;
        text-align: center;
        background-color: white; 
    }

    /*** mobile ***/
    @media screen and (max-width: 1000px) {
        ::-webkit-scrollbar { display: none; }
        ::-webkit-scrollbar { height: 0px; width: 0px; }

        input { width: 87vw; margin: auto; padding-right: 10px; }
        button:focus, button:hover { background-color: white; color: black; }

        .menuEditCategory { width: 90vw; }
        .menuCategoryHolder { width: 90vw; }
        .categoryTitle { width: 90vw; }
        .categoryInput { width: 22vw; }
        .categoryArrowUp { margin: 0px; }
        .categoryArrows { margin: 0px; width: 50px; }
        .menu-edit-category { width: 90vw; }
        .itemInput { width: 50vw; }
        .buttonRemoveItem { width: 52vw; }
        .item { width: 100%; }

        #editMenu { height: 93vh; width: 90vw; margin: auto; }
        #menuEditCategories { width: 90vw; }
        #menuEditRestaurantHours { width: 90vw; }
        #NavBarEdit { width: 100%; margin-bottom: 30px; }
        #menuEditRestaurantItems { width: 90vw; }
        #menuEditRestaurantCategory { width: 90vw; }
        #menu { width: 98vw; }
        #menu input { width: 98vw; }
        #menu-edit-button-addCategory { width: 94vw; }
    }
</style>

<body onload="loadSavedScrollPosition()" onscroll="saveScrollPosition()">
    <!-- nav menu -->
    <%- include('nav-menu-portal.ejs') %>
        
    <div id="editMenu">
        <!-- Type -->
        <div id="menuEditRestaurantType" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <b id="categoryTitleCuisine" class="categoryTitle">Cuisine</b>
            <input id="inputType" value="<%=restaurant.type %>" placeholder="..." onkeyup="setTypesToLocalStorage()" maxlength="100" />
            <script>setTypesToLocalStorage()</script>
        </div>
        
        <!-- Image -->
        <div id="menuEditRestaurantImageUrl" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <p class="categoryTitle">Profile Img URL</p>
            <input id="inputImg" value="<%=restaurant.imageUrl %>" onkeyup="setImgToLocalStorage()"></input>
            <script>setImgToLocalStorage()</script>
        </div>
        
        <!-- Phone -->
        <div id="menuEditRestaurantPhone" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <b class="categoryTitle">Phone</b>
            <% pn = restaurant.phone.toString().replaceAll("-", "") %>
            <input id="inputPhone" value="<%=pn %>" placeholder="..." onkeyup="setPhoneToLocalStorage()" maxlength="24" />
            <script>setPhoneToLocalStorage()</script>
        </div>
        
        <!-- Adress -->
        <div id="menuEditRestaurantAdress" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <b class="categoryTitle">City</b>
            <input id="inputCity" value="<%=restaurant.city %>" placeholder="..." onkeyup="setCityToLocalStorage()" maxlength="50" />
            <script>setCityToLocalStorage()</script>
        </div>

        <!-- Adress -->
        <div id="menuEditRestaurantAdress" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <b class="categoryTitle">Address</b>
            <input id="inputAddress" value="<%=restaurant.address %>" placeholder="..." onkeyup="setAddressToLocalStorage()" maxlength="50" />
            <script>setAddressToLocalStorage()</script>
        </div>

        <!-- Description -->
        <div id="menuEditRestaurantDescription" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <p class="categoryTitle">Description</p>
            <input id="inputDescription" value="<%=restaurant.description %>" placeholder="..." onkeyup="setDescriptionToLocalStorage()" maxlength="200" />
            <script>setDescriptionToLocalStorage()</script>
        </div>

        <!-- hours -->
        <div id="menuEditRestaurantHours" class="menuEditCategory" onclick="collapseMenuEditCategory(this.id)">
            <p class="categoryTitle">Hours</p>
            <% for(var c = 0; c < restaurant.hours.length; c++) { %>
                <!-- monday -->
                <% if(c == 0) { %>
                    <input id="inputHoursMonday" class="inputHours" maxlength="30" placeholder="Monday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- tuesday -->
                <% if(c == 1) { %>
                    <input id="inputHoursTuesday" class="inputHours" maxlength="30" placeholder="Tuesday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- wednesday -->
                <% if(c == 2) { %>
                    <input id="inputHoursWednesday" class="inputHours" maxlength="30" placeholder="Wednesday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- thursday -->
                <% if(c == 3) { %>
                    <input id="inputHoursThursday" class="inputHours" maxlength="30" placeholder="Thursday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- friday -->
                <% if(c == 4) { %>
                    <input id="inputHoursFriday" class="inputHours" maxlength="30" placeholder="Friday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- saturday -->
                <% if(c == 5) { %><div>
                    <input id="inputHoursSaturday" class="inputHours" maxlength="30" placeholder="Saturday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                <% } %>
                <!-- sunday -->
                <% if(c == 6) { %>
                    <input id="inputHoursSunday" class="inputHours" maxlength="30" placeholder="Sunday" value="<%=restaurant.hours[c].time %>" onkeyup="setHoursToLocalStorage()" />
                </div> 
                <% } %>
            <% } %>
            <script>setHoursToLocalStorage()</script>
        </div>

        <!-- Menu Categories -->
        <% if(restaurant.menuCategories.length != 0 && restaurant.menuCategories != null) { %>
        <div id="menuEditCategories">
            <b><p class="categoryTitle">Categories</p></b>
            
            <div id="menu-edit-button-addCategory" onclick="addCategory()">Add Category</div>

            <div id="menuEditRestaurantCategory" onclick="collapseMenuEditCategory(this.id)">
                <% for(var c = 0; c < restaurant.menuCategories.length; c++) { %>
                    <div id="category#<%=c + 1 %>" class="menuCategoryHolder menuCategory">
                        <b class="categoryNumber"><%=c + 1 %>.</b>
                        <input disabled id="categoryInput#<%=c + 1 %>" class="categoryInput" value="<%=restaurant.menuCategories[c].categoryName %>"></input>
                        <script>setCategoryToLocalStorage('<%=restaurant.menuCategories[c].categoryName %>')</script>
                        
                        <button id="categoryInput#<%=c + 1 %>-position" class="categoryArrows categoryArrowDown" value="<%=restaurant.menuCategories[c].position %>" onclick="changePositionCategories('<%=c + 1 %>', '<%=c + 2 %>', '<%=restaurant.menuCategories[c].categoryName %>')">▼</button>
                        <button id="categoryInput#<%=c + 1 %>-position" class="categoryArrows categoryArrowUp" value="<%=restaurant.menuCategories[c].position %>" onclick="changePositionCategories('<%=c + 1 %>', '<%=c + 0 %>', '<%=restaurant.menuCategories[c].categoryName %>')">▲</button>
                            
                        <% if(c != restaurant.menuCategories.length - 1 && c != 0) { %>
                            <button id="categoryInput#<%=c + 1%>-delete" class="menuCategoryRemoveButton" onclick="deleteCategory('<%=c + 1 %>', '<%=restaurant.menuCategories[c].categoryName %>')">-</button>
                            <% } else if(c == restaurant.menuCategories.length - 1) { %>
                            <button id="categoryInput#<%=c + 1%>-delete" class="menuCategoryRemoveButton" onclick="deleteCategory('<%=c + 1 %>', '<%=restaurant.menuCategories[c].categoryName %>')">-</button>
                            <% } else { %>
                            <button id="categoryInput#<%=c + 1%>-delete" class="menuCategoryRemoveButton" onclick="deleteCategory('<%=c + 1 %>', '<%=restaurant.menuCategories[c].categoryName %>')">-</button>
                        <% } %>
                    </div>
                <% } %>
            </div>

            <% var restaurantMenuItemsLength = null %>
            
            <% if(restaurant.menuItems == null) { %>
                <% restaurantMenuItemsLength = 0; %>
            <% } else { %>
                <% restaurantMenuItemsLength = restaurant.menuItems.length %>
            <% } %>
        </div>
        <% } %>

        <!-- Items -->
        <div id="menuEditRestaurantItems" onclick="collapseMenuEditCategory(this.id)">
            <!-- form start -->
            <form id="formMenuItems">
                <% var itemsCount = restaurantMenuItemsLength %>
                <% var categoryCount = restaurant.menuCategories[c] %>
                    <p class="categoryTitle">Items by Category</p> <!-- <%=itemsCount %>  -->
                    
                    <% for(var c = 0; c < restaurant.menuCategories.length; c++) { %>
                        <% var category = restaurant.menuCategories[c].categoryName %>
                        
                        <div id="category<%=category %>" class="menu-edit-category">
                            
                            <div id="category<%=category %>Header">
                                <label class="addCategoryItemBtn" onclick="addItem('<%=category %>')">+</label>
                                <input hidden id="categoryInput#<%=c + 1 %>-disabled" disabled value="<%=restaurant.menuCategories[c].categoryName %>"></input>
                                <label id="categoryCounterParagraph<%=category %>" class="menuCategoryName" value="<%=c + 1%>" onclick="collapseDiv('category<%=category %>Body')"><%=restaurant.menuCategories[c].categoryName %></label>
                            </div>
                            
                            <div id="category<%=category %>Body" style="display: none;">
                                <% for(var x = 0; x < restaurantMenuItemsLength; x++) { %>
                                
                                <% if(restaurant.menuCategories[c].categoryName == restaurant.menuItems[x].category)  { %>
                                    <div id="item-<%=restaurant.menuCategories[c].categoryName %>#<%=restaurant.menuItems[x].position %>" class="item <%=restaurant.menuCategories[c].categoryName %>">
    
                                        <% var item = "item-" + restaurant.menuItems[x].category + "#" + restaurant.menuItems[x].position %>
                                        <% var itemId = restaurant.menuItems[x].category %>
                                        <% var itemCategory = restaurant.menuItems[x].category %>
                                        <% var itemInputPosition = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-position" %>
                                        <% var itemInputId = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-id" %>
                                        <% var itemInputCategory = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-category" %>
                                        <% var itemInputTitle = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-title" %>
                                        <% var itemInputPrice = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-price" %>
                                        <% var itemInputDescription = "item-" + restaurant.menuCategories[c].categoryName + "#" + restaurant.menuItems[x].position + "-input-description" %>
                                        
                                        <input id="<%=itemInputId %>" name="" disabled value="<%=itemId %>" placeholder="id" class="itemInput" style="display: none;"></input>
                                        <input id="<%=itemInputCategory %>" name="" disabled value="<%=itemCategory %>" class="itemInput" style="display: none;"></input>
                                        <input id="<%=itemInputPosition %>" name="" disabled onkeyup="setItemLocalStorage('<%=item %>')" placeholder="position" class="itemInput" style="display: none;"></input>
                                        
                                        <input id="<%=itemInputTitle %>" name="" placeholder="name" onkeyup="setItemLocalStorage('<%=item %>')" value="<%=restaurant.menuItems[x].title %>" class="itemInput" maxlength="25"></input>
                                        <input id="<%=itemInputPrice %>" name="" placeholder="price" onchange="setItemLocalStorage('<%=item %>')" value="<%=restaurant.menuItems[x].price %>" class="itemInput" maxlength="10"></input>
                                        <input id="<%=itemInputDescription %>" name="" placeholder="description" onkeyup="setItemLocalStorage('<%=item %>')" value="<%=restaurant.menuItems[x].description %>" class="itemInput" maxlength="255"></input>
    
                                        <div onclick="deleteItem('<%=item  %>', '<%=restaurant.menuCategories[c].categoryName %>', '<%=restaurant.menuItems[x].position %>')" class="itemInput buttonRemoveItem">-</div>
                                        
                                        <script>
                                            countCategoriesForSpecificItem('item-<%=restaurant.menuCategories[c].categoryName %>#<%=restaurant.menuItems[x].position %>-input-position', 'item-<%=restaurant.menuCategories[c].categoryName %>#<%=restaurant.menuItems[x].position %>-input-id', '<%=restaurant.menuCategories[c].categoryName %>');
                                            setItemLocalStorage('<%=item %>');
                                        </script>
                                    </div>
                                <% } else { %>
                                    
                                <% } %>
                                <% } %>
                            </div>
    
                            <script>countCategories("<%=category %>")</script>
                        </div>
                    <% } %>
                </form>
            </div>

            <div id="NavBarEdit" onclick="editMenuSubmitChanges()">Confirm Changes</div>
    </div>

    <!-- hidden -->
    <form hidden id="formMenuEditData" action="/portal/updateMenu" method="POST">
        <input id="inputAllImg" name="inputAllImg" value="img"></input>
        <input id="inputAllPhone" name="inputAllPhone" value="phone"></input>
        <input id="inputAllAddress" name="inputAllAddress" value="address"></input>
        <input id="inputAllDescription" name="inputAllDescription" value="description"></input>
        <input id="inputAllHours" name="inputAllHours" value="hours"></input>
        <input id="inputAllTypes" name="inputAllTypes" value="types"></input>
        <input id="inputAllCategories" name="inputAllCategories" value=""></input>  
        <input id="inputAllItems" name="inputAllItems" value=""></input>
        <input id="inputAllCity" name="inputAllCity" value=""></input>
        <button>Button</button>   
    </form>

    <script>setFormWithCorrectData();</script>


    <!-- google maps API -->
    <div hidden id="map"></div>
</body>
</html>